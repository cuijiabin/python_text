# coding=utf-8
ss = ['202106012431968822', '202106012431969510', '202106012431970870', '202106012431971080', '202106012431972212',
      '202106012431972332', '202106012431974930', '202106012431978842', '202106012431978922', '202106012431982401',
      '202106012431986522', '202106012431988791', '202106012431989381', '202106012431989510', '202106012431993651',
      '202106012431996384', '202106012432006103', '202106012432010144', '202106012432016103', '202106012432023653',
      '202106012432025123', '202106012432039693', '202106012432046673', '202106012432072513', '202106012432074953',
      '202106012432096003', '202106012432121556', '202106012432126198', '202106012432127218', '202106012432128236',
      '202106012432142897', '202106022432163171', '202106022432180210', '202106012431967112', '202106012431968050',
      '202106012431970361', '202106012431972772', '202106012431973171', '202106012431975630', '202106012431977090',
      '202106012431978800', '202106012431979121', '202106012431979932', '202106012431979970', '202106012431983170',
      '202106012431987071', '202106012431987342', '202106012431987372', '202106012431989161', '202106012431991130',
      '202106012431991352', '202106012431991400', '202106012431992250', '202106012431993772', '202106012431994252',
      '202106012431995192', '202106012431996663', '202106012431996894', '202106012432001605', '202106012432001705',
      '202106012432006854', '202106012432010265', '202106012432018583', '202106012432023024', '202106012432025043',
      '202106012432025075', '202106012432027244', '202106012432032685', '202106012432032854', '202106012432047085',
      '202106012432075023', '202106012432086013', '202106012432095745', '202106012432098044', '202106012432105127',
      '202106012432106518', '202106012432107226', '202106012432107338', '202106012432107636', '202106012432120826',
      '202106012432127056', '202106012432129128', '202106012432132727', '202106012432133128', '202106012432137058',
      '202106012432142256', '202106012432144798', '202106022432162062', '202106022432170660', '202106022432171510',
      '202106022432172610', '202106022432179772', '202106022432189870', '202106022432189932', '202106022432193481']


# 已提交的sql转换，即sql的逆向操作
def reduction_txt(txt, c_out):
    # c_out = False
    if txt is None or len(txt) == 0:
        return c_out
    elif txt[0] == "-":
        txt = txt.replace("\n", "")
        print(txt)
        # c_out = False
        # for s in ss:
        #     if s in txt:
        #         # print("-- 父单号 " + s + " 处理")
        #         c_out = True
        return c_out
    txt = txt.replace(";", "").replace("\n", "").replace("limit 1", "")
    str_arr = txt.split("where")
    if len(str_arr) < 2:
        # print("错误")
        # if c_out:
        #     print(txt)
        return c_out

    condition = str_arr[1]
    condition = condition.split("and")
    data_id = condition.pop(0)
    condition = ",  ".join(list(map(lambda x: x.strip(), condition)))
    set_result = str_arr[0]
    uq = set_result.split("set")
    # print(uq)
    set_result = uq[1].split(",")
    set_result.insert(0, data_id)
    set_result = " and ".join(list(map(lambda x: x.strip(), set_result)))

    sql = uq[0] + "set " + condition + " where " + set_result + ";"
    # if c_out:
    print(sql)
    return c_out


if __name__ == '__main__':
    # reduction_txt("-- 父单号 202106012431986522 处理")
    # reduction_txt(
    #     "update order_item t set deal_price = 107.74,  pay_price = 107.74, promotion_info = '61.25' where id = 676981465 and deal_price = 143.63 and pay_price = 143.63 and promotion_info = '25.35';")

    file_in = open("E:\\file\\download\\mm.txt", 'r', encoding='UTF-8')
    # file_in = open("E:\\file\\download\\order_item.txt", 'r', encoding='UTF-8')
    c_out = False
    try:
        for line in file_in:
            c_out = reduction_txt(line, False)
    finally:
        file_in.close()
